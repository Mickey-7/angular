reference : https://material.angular.io/components/stepper/examples

-----------------------------------------------------------------------------

import all the nedded modules from angular-material
  //
  import { ReactiveFormsModule } from "@angular/forms";
  import { MatStepperModule } from "@angular/material/stepper";
  import { MatFormFieldModule } from "@angular/material/form-field";
  import { MatInputModule } from "@angular/material/input";
  import { MatButtonModule } from "@angular/material/button";

  @NgModule({
    imports: [
      //
      ReactiveFormsModule,
      MatStepperModule,
      MatFormFieldModule,
      MatInputModule,
      MatButtonModule,
    ]
  })

-----------------------------------------------------------------------------

app.component.html

  <!-- the #stepper below pertian to the stepper.reset() -->
  <mat-vertical-stepper #stepper [linear]="isLinear">
    <!-- creating and putting title on step -->
    <mat-step label="Fill out your first name" [stepControl]="form">
      <!-- actual form must contain [formGroup]="FormGroup_name"-->
      <!-- snippet : a-formG -->
      <!-- formGroup must contain formControlName -->
      <form [formGroup]="form">
        <!-- mat-form-field must contain matInput -->
        <mat-form-field>
          <mat-label>First Name</mat-label>
          <!-- snippet : a-formC -->
          <input matInput formControlName="firstName" />
        </mat-form-field>
        <!-- for navigation to the next step -->
        <div>
          <button mat-button matStepperNext>Next</button>
        </div>
      </form>
    </mat-step>

    <!-- creating and putting title on step -->
    <mat-step label="Fill out your last name" [stepControl]="form1">
      <!-- actual form must contain [formGroup]="FormGroup_name"-->
      <!-- snippet : a-formG -->
      <!-- formGroup must contain formControlName -->
      <form [formGroup]="form1">
        <!-- mat-form-field must contain matInput -->
        <mat-form-field>
          <mat-label>Name</mat-label>
          <!-- snippet : a-formC -->
          <input matInput formControlName="lastName" />
        </mat-form-field>
        <!-- for navigation to the next step -->
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </form>
    </mat-step>

    <!-- creating and putting title on OPTIONAL STEP -->
    <mat-step
      label="Fill out your age"
      [stepControl]="form2"
      [optional]="isOptional"
    >
      <!-- actual form must contain [formGroup]="FormGroup_name"-->
      <!-- snippet : a-formG -->
      <!-- formGroup must contain formControlName -->
      <form [formGroup]="form2">
        <!-- mat-form-field must contain matInput -->
        <mat-form-field>
          <mat-label>Age</mat-label>
          <!-- snippet : a-formC -->
          <input matInput formControlName="age" />
        </mat-form-field>
        <!-- for navigation to the next step -->
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </form>
    </mat-step>

    <!-- creating and putting title on step -->
    <mat-step label="Done">
      <p>You are now done.</p>
      <!-- for navigation to the next step -->
      <div>
        <!-- the stepper below pertain to the #stepper above -->
        <button mat-button (click)="stepper.reset()">Reset</button>
        <button mat-button (click)="submit()">Submit</button>
      </div>
    </mat-step>
  </mat-vertical-stepper>

  <h3>Displaying the input values</h3>

  <p>{{ binding | json }}</p>
  <p>{{ binding1 | json }}</p>
  <p>{{ binding2 | json }}</p>

-----------------------------------------------------------------------------

app.components.ts

    // code for step by step validation
    isLinear = true;
    form = new FormGroup({
      firstName: new FormControl("", [Validators.required]),
    });
    form1 = new FormGroup({
      lastName: new FormControl("", [Validators.required]),
    });
    //for optional step
    isOptional = true;
    form2 = new FormGroup({
      age: new FormControl("", [Validators.required]),
    });

    // the code below is equivalent of the code for validation above
    // only using FormBuilder  - still need isLinear var only

    // form: FormGroup;
    // form1: FormGroup;
    // constructor(private formBuilder: FormBuilder) {
    //   this.form = this.formBuilder.group({
    //     firstName: ["", Validators.required],
    //   });
    //   this.form1 = this.formBuilder.group({
    //     lastName: ["", Validators.required],
    //   });
    //   this.form2 = this.formBuilder.group({
    //     age: ["", Validators.required],
    //   });
    // }

    binding: any;
    binding1: any;
    binding2: any;

    submit() {
      console.log(this.form.value);
      console.log(this.form1.value);
      console.log(this.form2.value);

      this.binding = this.form.value;
      JSON.stringify(this.binding);
      this.binding1 = this.form1.value;
      JSON.stringify(this.binding1);
      this.binding2 = this.form2.value;
      JSON.stringify(this.binding2);
    }

----------------------------------------------------------------------------

Learnings on stepper

  adding below on component.ts will indicate the current step 
  and will make the icon change to check after the step is done

    providers: [{
      provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}
    }]

  -----------------------------------------------------------------------------

  component.html template side
      formGroup must contain formControlName 
  component.ts side
      FormGroup must contain FormControl

  components.html template side
    [linear]="isLinear" on <mat-vertical-stepper> tag & 
    [stepControl]="FormGroup_name" on <mat-step> tag must 
    be used together to restrict to go to next step if the 
    current field is empty or null, also implementing the 
    validation on components.ts 
  component.ts side   
      isLinear=true
      form = new FormGroup({
        firstName: new FormControl("", [Validators.required]),
      });

  components.html template side
    the #stepper on <mat-vertical-stepper> tag pertains to  
    (click)="stepper.reset()"

-----------------------------------------------------------------------------

error encoutnered :

    core.js:6185 ERROR Error: NodeInjector: NOT_FOUND [ControlContainer]

solution :

    need to include [formGroup]="FormGroup_name" on form tag

    this took a fucking day !!!!!!! as we revisited the ReactiveFormsModule
